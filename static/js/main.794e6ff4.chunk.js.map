{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","prevTodos","getTodoId","prevTodo","arrayId","task","Math","max","App","useState","setTodos","setTitle","titleError","setTitleError","setUser","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","htmlFor","type","placeholder","value","onChange","target","replace","disabled","users","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.794e6ff4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../type/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './type/Todo';\nimport { User } from './type/User';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const findUser = usersFromServer.find(user => user.id === +userId);\n\n  return findUser || null;\n}\n\nconst prevTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction titleValidation(value: string) {\n  return value.replace(/[^a-zA-Zа-яА-Я0-9\\s]+$/g, '');\n}\n\nfunction getTodoId(prevTodo: Todo[]): number {\n  const arrayId = prevTodo.map(task => task.id);\n\n  return Math.max(...arrayId) + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(prevTodos);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [user, setUser] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  const handlTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(titleValidation(event.target.value));\n  };\n\n  const handlUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserError(false);\n    setUser(+event.target.value);\n  };\n\n  const handlSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!user) {\n      setUserError(true);\n    }\n\n    if (title && user) {\n      const newTodo: Todo = {\n        id: getTodoId(todos),\n        title,\n        completed: false,\n        userId: user,\n        user: getUserById(user),\n      };\n\n      setTodos([...todos, newTodo]);\n      setTitle('');\n      setUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handlSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titelId\">\n            {'Title: '}\n          </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titelId\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handlTitle}\n          />\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">\n            {'User: '}\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userId\"\n            name=\"user\"\n            value={user}\n            onChange={handlUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(users => (\n              <option\n                key={users.id}\n                value={users.id}\n              >\n                {users.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}